<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Calcul des glucides - Repas</title>
  <style>
    :root {
      --bg: #fff;
      --text: #333;
      --card: rgba(255, 255, 255, 0.95);
      --banner: #ffd1dc;
      --button: #00a8cc;
      --button-hover: #007ea7;
      --delete: #ff4d4d;
      --delete-hover: #cc0000;
    }

	body.dark {
 		--bg: #1e1e2f;
		--text: #e0e0e0;
		--card: rgba(40, 40, 60, 0.95);
		--banner: #3a3a5a;
		--button: #8ab4f8;
		--button-hover: #669df6;
		--delete: #ff9999;
		--delete-hover: #ff4d4d;
		}

    body {
      font-family: sans-serif;
      padding: 20px;
      margin: 0;
      background: url('./images/fond.svg') no-repeat center center fixed;
      background-size: cover;
      background-color: var(--bg);
      color: var(--text);
    }

    header {
      background: var(--card);
      padding: 20px;
      text-align: center;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }

    h1 {
      font-size: 28px;
      margin: 0;
    }

    main {
      background: var(--card);
      padding: 20px;
      margin-top: 20px;
      border-radius: 10px;
    }

    /* Nouveau : conteneur pour scroll horizontal */
    .table-wrapper {
      overflow-x: auto;
      margin-top: 20px;
      margin-bottom: 20px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      min-width: 600px; /* pour forcer scroll sur mobile */
    }

    th, td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: center;
    }

    select, input {
      padding: 5px;
      width: 100%;
    }

    tfoot td {
      font-weight: bold;
    }

    .add-row {
      margin-top: 10px;
      padding: 10px 15px;
      font-size: 16px;
      background-color: var(--button);
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .add-row:hover {
      background-color: var(--button-hover);
    }

.banniere {
  position: fixed;
  top: 0;
  width: 100%;
  background-color: #f5f5f5;
  color: #000;
  padding: 10px 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  font-weight: bold;
  z-index: 999;
}

.toggle-darkmode {
  position: absolute;
  left: 20px;
  background: none;
  border: none;
  font-size: 20px;
  cursor: pointer;
}

    .toggle-darkmode:hover {
      background: var(--button-hover);
    }

    .delete-row {
      cursor: pointer;
      font-weight: bold;
      color: var(--delete);
      border: none;
      background: none;
      font-size: 20px;
    }

    .delete-row:hover {
      color: var(--delete-hover);
    }
  </style>
</head>
<body>
<script>
  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
    document.body.classList.add('dark');
  }
</script>

  <div class="banniere">
      <button class="toggle-darkmode" onclick="document.body.classList.toggle('dark')">üåô</button>
      Calcul des glucides ‚Äì Repas
  </div>

  <header>
    <h1>ü©∫ Suivi des glucides </h1>
    <p>Calcule facilement les glucides de ton repas</p>
    
  </header>

    
  <main>
      <div class="total-glucides-haut">
      <h2>Total glucides consomm√©s</h2>
      <p><strong id="total-glucides">0</strong> g</p>
    </div>
    <h2>Tableau 1 : Glucides par 100g</h2>
    <div class="table-wrapper">
    <table id="repas-table">
      <thead>
        <tr>
          <th>Cat√©gorie</th>
          <th>Aliment</th>
          <th>Quantit√© (g)</th>
          <th>Glucides / 100g</th>
          <th>Glucides consomm√©s</th>
          <th>Supprimer</th>
        </tr>
      </thead>
      <tbody id="repas-body"></tbody>
    </table>
    <button class="add-row" onclick="ajouterLigne()">‚ûï Ajouter un aliment</button>

    <h2>Fruits par portion/unit√©</h2>
    <div class="table-wrapper">
    <table id="portion-table">
      <thead>
        <tr>
          <th>Aliment</th>
          <th>Glucides / portion</th>
          <th>Nombre de portions</th>
          <th>Glucides consomm√©s</th>
          <th>Supprimer</th>
        </tr>
      </thead>
      <tbody id="portion-body"></tbody>
    </table>
    <button class="add-row" onclick="ajouterPortion()">‚ûï Ajouter une portion</button>

    <h2>Produits Laitiers</h2>
    <div class="table-wrapper">
    <table id="laitier-table">
      <thead>
        <tr>
          <th>Aliment</th>
          <th>Glucides / portion</th>
          <th>Nombre de portions</th>
          <th>Glucides consomm√©s</th>
          <th>Supprimer</th>
        </tr>
      </thead>
      <tbody id="laitier-body"></tbody>
    </table>
    <button class="add-row" onclick="ajouterLaitier()">‚ûï Ajouter un produit laitier</button>


  </main>

  <script>
    const aliments = [
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Polenta", glucides: 15 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Boulgour", glucides: 20 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Pur√©e PDT", glucides: 15 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Quinoa", glucides: 25 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Mais", glucides: 18 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Pomme de terre", glucides: 20 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "P√¢tes", glucides: 25 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Riz, semoule, bl√©, gnocchi", glucides: 30 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Frites", glucides: 35 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Pain", glucides: 50 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "F√®ves", glucides: 15 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Flageolets", glucides: 15 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Haricots blancs et rouges", glucides: 15 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Lentilles", glucides: 15 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Pois cass√©s", glucides: 15 },
      { categorie: "F√©culents, Pain, L√©gumes Secs", aliment: "Pois chiches", glucides: 15 }
    ];

    const portions = [
  { categorie: "Fruits", aliment: "1 pomme", glucides: 15 },
  { categorie: "Fruits", aliment: "1 poire", glucides: 15 },
  { categorie: "Fruits", aliment: "1 coing", glucides: 15 },
  { categorie: "Fruits", aliment: "2 kiwis", glucides: 15 },
  { categorie: "Fruits", aliment: "1 pamplemousse", glucides: 15 },
  { categorie: "Fruits", aliment: "1 orange", glucides: 15 },
  { categorie: "Fruits", aliment: "2 √† 3 cl√©mentines (selon la taille)", glucides: 15 },
  { categorie: "Fruits", aliment: "1 petite banane", glucides: 15 },
  { categorie: "Fruits", aliment: "1 barquette de fraises (250 g)", glucides: 15 },
  { categorie: "Fruits", aliment: "2 barquettes de framboises (2 x 125 g)", glucides: 15 },
  { categorie: "Fruits", aliment: "0.5 petit melon ou ‚Öõ d'un gros", glucides: 15 },
  { categorie: "Fruits", aliment: "1/6√®me de past√®que", glucides: 15 },
  { categorie: "Fruits", aliment: "1/6√®me d'ananas", glucides: 15 },
  { categorie: "Fruits", aliment: "3 √† 4 abricots (selon la taille)", glucides: 15 },
  { categorie: "Fruits", aliment: "1 p√™che", glucides: 15 },
  { categorie: "Fruits", aliment: "1 brugnon", glucides: 15 },
  { categorie: "Fruits", aliment: "1 nectarine", glucides: 15 },
  { categorie: "Fruits", aliment: "4 prunes ou 4 quetsches ou 4 reine claude", glucides: 15 },
  { categorie: "Fruits", aliment: "10 √† 12 mirabelles", glucides: 15 },
  { categorie: "Fruits", aliment: "15 cerises", glucides: 15 },
  { categorie: "Fruits", aliment: "1 petite grappe de raisin (10 √† 15 grains)", glucides: 15 },
  { categorie: "Fruits", aliment: "6 litchis", glucides: 15 },
  { categorie: "Fruits", aliment: "0.5 petite mangue", glucides: 15 },
  { categorie: "Fruits", aliment: "2 √† 3 figues fra√Æches", glucides: 15 },
  { categorie: "Fruits", aliment: "5 dattes fra√Æches", glucides: 15 },
  { categorie: "Fruits", aliment: "2 figues s√®ches", glucides: 15 },
  { categorie: "Fruits", aliment: "2 dattes s√®ches", glucides: 15 },
  { categorie: "Fruits", aliment: "2 √† 3 pruneaux", glucides: 15 }
      
    ];

    const produitsLaitiers = [
      { categorie: "Produits Laitiers", aliment: "Yaourt Nature", glucides: 5 },
      { categorie: "Produits Laitiers", aliment: "Yaourt aromatis√©", glucides: 10 },
      { categorie: "Produits Laitiers", aliment: "Yaourt avec fruits", glucides: 15 }
    ];

    function ajouterLigne() {
      const tbody = document.getElementById("repas-body");
      const tr = document.createElement("tr");

      tr.innerHTML = `
        <td><input type="text" class="categorie" readonly></td>
        <td><select><option value="">-- Choisir --</option>
          ${aliments.map(a => `<option value="${a.aliment}" data-cat="${a.categorie}" data-glucides="${a.glucides}">${a.aliment}</option>`).join("")}
        </select></td>
        <td><input type="number" class="quantite" min="0"></td>
        <td><input type="number" class="glucides-unit" readonly></td>
        <td><input type="number" class="glucides-total" readonly></td>
        <td><button class="delete-row" onclick="supprimerLigne(this)">‚ùå</button></td>`;

      tbody.appendChild(tr);

      tr.querySelector("select").onchange = function () {
        const option = this.selectedOptions[0];
        tr.querySelector(".categorie").value = option.dataset.cat;
        tr.querySelector(".glucides-unit").value = option.dataset.glucides;
        calculerGlucides(tr);
      };

      tr.querySelector(".quantite").oninput = () => calculerGlucides(tr);
    }

    function ajouterPortion() {
      ajouterPortionGenerique(portions, "portion-body");
    }

    function ajouterLaitier() {
      ajouterPortionGenerique(produitsLaitiers, "laitier-body");
    }

    function ajouterPortionGenerique(liste, tbodyId) {
      const tbody = document.getElementById(tbodyId);
      const tr = document.createElement("tr");

      tr.innerHTML = `
        <td><select><option value="">-- Choisir --</option>
          ${liste.map(p => `<option value="${p.aliment}" data-glucides="${p.glucides}">${p.aliment}</option>`).join("")}
        </select></td>
        <td><input type="number" class="glucides-portion" readonly></td>
        <td><input type="number" class="nb-portions" min="0"></td>
        <td><input type="number" class="glucides-total" readonly></td>
        <td><button class="delete-row" onclick="supprimerLigne(this)">‚ùå</button></td>`;

      tbody.appendChild(tr);

      tr.querySelector("select").onchange = function () {
        const glucides = this.selectedOptions[0].dataset.glucides;
        tr.querySelector(".glucides-portion").value = glucides;
        calculerGlucidesPortion(tr);
      };

      tr.querySelector(".nb-portions").oninput = () => calculerGlucidesPortion(tr);
    }

    function supprimerLigne(btn) {
      const tr = btn.closest("tr");
      tr.remove();
      calculerTotalGlucides();
    }

    function calculerGlucides(row) {
      const qte = parseFloat(row.querySelector(".quantite").value) || 0;
      const g = parseFloat(row.querySelector(".glucides-unit").value) || 0;
      const total = (qte * g) / 100;
      row.querySelector(".glucides-total").value = total.toFixed(1);
      calculerTotalGlucides();
    }

    function calculerGlucidesPortion(row) {
      const n = parseFloat(row.querySelector(".nb-portions").value) || 0;
      const g = parseFloat(row.querySelector(".glucides-portion").value) || 0;
      const total = n * g;
      row.querySelector(".glucides-total").value = total.toFixed(1);
      calculerTotalGlucides();
    }

    function calculerTotalGlucides() {
      const totaux = document.querySelectorAll(".glucides-total");
      let total = 0;
      totaux.forEach(input => total += parseFloat(input.value) || 0);
      document.getElementById("total-glucides").textContent = total.toFixed(1);
    }

    ajouterLigne();
    ajouterPortion();
    ajouterLaitier();
  </script>
</body>
</html>